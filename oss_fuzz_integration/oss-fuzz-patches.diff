diff --git a/infra/base-images/base-builder/Dockerfile b/infra/base-images/base-builder/Dockerfile
index 8dcbdce6c..583427556 100644
--- a/infra/base-images/base-builder/Dockerfile
+++ b/infra/base-images/base-builder/Dockerfile
@@ -176,5 +176,9 @@ RUN chmod +x /usr/local/bin/clang-jcc && chmod +x /usr/local/bin/clang++-jcc
 COPY llvmsymbol.diff $SRC
 COPY detect_repo.py /opt/cifuzz/
 COPY bazel.bazelrc /root/.bazelrc
+RUN rm -rf /fuzz-introspector/src
+RUN rm -rf /fuzz-introspector/frontends
+COPY src /fuzz-introspector/src
+COPY frontends /fuzz-introspector/frontends
 
 CMD ["compile"]
\ No newline at end of file
diff --git a/infra/base-images/base-builder/compile_libfuzzer b/infra/base-images/base-builder/compile_libfuzzer
index 9acd0ccb6..5c9a85986 100755
--- a/infra/base-images/base-builder/compile_libfuzzer
+++ b/infra/base-images/base-builder/compile_libfuzzer
@@ -21,5 +21,5 @@ if [ "$FUZZING_LANGUAGE" = "go" ]; then
     export LIB_FUZZING_ENGINE="$LIB_FUZZING_ENGINE $GOPATH/gosigfuzz/gosigfuzz.o"
 fi
 
-cp /usr/local/lib/clang/*/lib/$ARCHITECTURE-unknown-linux-gnu/libclang_rt.fuzzer.a $LIB_FUZZING_ENGINE_DEPRECATED
+# cp /usr/local/lib/clang/*/lib/$ARCHITECTURE-unknown-linux-gnu/libclang_rt.fuzzer.a $LIB_FUZZING_ENGINE_DEPRECATED
 echo " done."
diff --git a/infra/base-images/base-builder/precompile_centipede b/infra/base-images/base-builder/precompile_centipede
index 2abc1e9ff..63b90af50 100755
--- a/infra/base-images/base-builder/precompile_centipede
+++ b/infra/base-images/base-builder/precompile_centipede
@@ -16,7 +16,7 @@
 ################################################################################
 
 echo -n "Precompiling centipede"
-
+exit 0
 # Build Centipede with bazel.
 cd "$SRC/fuzztest/centipede/"
 apt-get update && apt-get install libssl-dev -y
diff --git a/infra/base-images/base-builder/precompile_honggfuzz b/infra/base-images/base-builder/precompile_honggfuzz
index df6bb2b75..dd7f3d1eb 100755
--- a/infra/base-images/base-builder/precompile_honggfuzz
+++ b/infra/base-images/base-builder/precompile_honggfuzz
@@ -28,6 +28,8 @@ PACKAGES=(
 
 apt-get install -y ${PACKAGES[@]}
 
+exit 0
+
 pushd $SRC/honggfuzz > /dev/null
 make clean
 # These CFLAGs match honggfuzz's default, with the exception of -mtune to
diff --git a/infra/base-images/base-clang/Dockerfile b/infra/base-images/base-clang/Dockerfile
index 8a00520a2..49261c87e 100644
--- a/infra/base-images/base-clang/Dockerfile
+++ b/infra/base-images/base-clang/Dockerfile
@@ -41,9 +41,12 @@ RUN apt-get update && apt-get install -y git && \
     apt-get autoremove --purge -y git && \
     rm -rf .git
 
+COPY llvm-project /src/llvm-project
 COPY checkout_build_install_llvm.sh /root/
 # Keep all steps in the same script to decrease the number of intermediate
 # layes in docker file.
+RUN rm -rf /fuzz-introspector
+COPY fuzz-introspector fuzz-introspector
 RUN /root/checkout_build_install_llvm.sh
 RUN rm /root/checkout_build_install_llvm.sh
 
@@ -62,5 +65,6 @@ ENV CCC "clang++"
 # incompatible-function-pointer-types, enum-constexpr-conversion
 
 ENV CFLAGS "-O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=enum-constexpr-conversion -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION"
-ENV CXXFLAGS_EXTRA "-stdlib=libc++"
+#ENV CXXFLAGS_EXTRA "-stdlib=libc++"
+ENV CXXFLAGS_EXTRA ""
 ENV CXXFLAGS "$CFLAGS $CXXFLAGS_EXTRA"
diff --git a/infra/base-images/base-clang/checkout_build_install_llvm.sh b/infra/base-images/base-clang/checkout_build_install_llvm.sh
index bd345b79a..6fd2cc01f 100755
--- a/infra/base-images/base-clang/checkout_build_install_llvm.sh
+++ b/infra/base-images/base-clang/checkout_build_install_llvm.sh
@@ -50,7 +50,8 @@ LLVM_DEP_PACKAGES="build-essential make ninja-build git python3 python3-distutil
 apt-get update && apt-get install -y $LLVM_DEP_PACKAGES --no-install-recommends
 
 # For manual bumping.
-OUR_LLVM_REVISION=llvmorg-18-init-4631-gd50b56d1
+#OUR_LLVM_REVISION=llvmorg-18-init-4631-gd50b56d1
+OUR_LLVM_REVISION=llvmorg-18-init-14420-gea3a3b25_92
 
 mkdir $SRC/chromium_tools
 cd $SRC/chromium_tools
@@ -89,7 +90,7 @@ function clone_with_retries {
   set -e
   return $CHECKOUT_RETURN_CODE
 }
-clone_with_retries https://github.com/llvm/llvm-project.git $LLVM_SRC
+#clone_with_retries https://github.com/llvm/llvm-project.git $LLVM_SRC
 
 PROJECTS_TO_BUILD="clang;lld"
 function cmake_llvm {
diff --git a/infra/base-images/base-runner/Dockerfile b/infra/base-images/base-runner/Dockerfile
index 45c5e73b6..07bd1b9c0 100755
--- a/infra/base-images/base-runner/Dockerfile
+++ b/infra/base-images/base-runner/Dockerfile
@@ -19,7 +19,7 @@
 FROM gcr.io/oss-fuzz-base/base-image as temp-runner-binary-builder
 
 RUN apt-get update && apt-get install -y cargo
-RUN cargo install rustfilt
+#RUN cargo install rustfilt
 
 # Using multi-stage build to copy some LLVM binaries needed in the runner image.
 FROM gcr.io/oss-fuzz-base/base-clang AS base-clang
@@ -27,7 +27,7 @@ FROM gcr.io/oss-fuzz-base/base-clang AS base-clang
 # Real image that will be used later.
 FROM gcr.io/oss-fuzz-base/base-image
 
-COPY --from=temp-runner-binary-builder /root/.cargo/bin/rustfilt /usr/local/bin
+#COPY --from=temp-runner-binary-builder /root/.cargo/bin/rustfilt /usr/local/bin
 
 # Copy the binaries needed for code coverage and crash symbolization.
 COPY --from=base-clang /usr/local/bin/llvm-cov \
diff --git a/projects/leveldb/fuzz_db.cc b/projects/leveldb/fuzz_db.cc
index 0147c124f..5cb9f166a 100644
--- a/projects/leveldb/fuzz_db.cc
+++ b/projects/leveldb/fuzz_db.cc
@@ -40,7 +40,7 @@ class AutoDbDeleter {
   AutoDbDeleter& operator=(const AutoDbDeleter&) = delete;
 
   ~AutoDbDeleter() {
-    std::__fs::filesystem::remove_all(kDbPath);
+    //std::__fs::filesystem::remove_all(kDbPath);
   }
 };
 
